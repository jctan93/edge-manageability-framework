# SPDX-FileCopyrightText: 2025 Intel Corporation
#
# SPDX-License-Identifier: Apache-2.0
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: deployment-patch-role
  namespace: capi-system
rules:
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "patch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: allow-capi-manager-to-patch
  namespace: capi-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: deployment-patch-role
subjects:
- kind: ServiceAccount
  name: capi-manager
  namespace: capi-system
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: provider-core-patch
  namespace: capi-system
spec:
  schedule: "*/2 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: capi-manager
          containers:
          - name: kubectl
            image: bitnami/kubectl:1.30.1  # pinned version
            command:
            - /bin/sh
            - -c
            - |
              echo "Patching args..."
              kubectl -n capi-system patch deployment capi-controller-manager --type='strategic' -p '{
                "spec": {
                  "template": {
                    "spec": {
                      "containers": [{
                        "name": "manager",
                        "args": [
                          "--leader-elect",
                          "--use-deprecated-infra-machine-naming=false",
                          "--diagnostics-address=:8080",
                          "--insecure-diagnostics=true"
                        ]
                      }]
                    }
                  }
                }
              }'
              echo "patching ports..." # note: it is a slice so, other can change. that is the reason for this.
              kubectl -n capi-system patch deployment capi-controller-manager --type='json' -p='[
                {
                  "op": "replace",
                  "path": "/spec/template/spec/containers/0/ports",
                  "value": [
                    {
                      "containerPort": 9443,
                      "name": "webhook-server",
                      "protocol": "TCP"
                    },
                    {
                      "containerPort": 9440,
                      "name": "healthz",
                      "protocol": "TCP"
                    },
                    {
                      "containerPort": 8080,
                      "name": "metrics",
                      "protocol": "TCP"
                    }
                  ]
                }
              ]'
          restartPolicy: Never
